name: Build and Deploy

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build:
    runs-on: ubuntu-latest

    services:
      mongodb:
        image: mongo:latest
        ports:
          - 27017:27017

    steps:
    - uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '16.x'

    - name: Install Angular CLI
      run: npm install -g @angular/cli

    - name: Restore MongoDB Database
      run: |
        mongorestore --db forum ./forum

    # Frontend Build
    - name: Install Frontend Dependencies
      working-directory: ./Angular/final-project
      run: npm install

    - name: Build Angular Frontend
      working-directory: ./Angular/final-project
      run: ng build --configuration production

    # Backend Build
    - name: Install Backend Dependencies
      working-directory: ./Server
      run: npm install

    - name: Build Backend
      working-directory: ./Server
      run: |
        if [ -f "build.js" ]; then
          node build.js
        else
          echo "No build script found for backend, using as is"
        fi

    # Docker Build
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Build Frontend Docker Image
      uses: docker/build-push-action@v5
      with:
        context: .
        file: ./Dockerfile
        push: false
        tags: book-catalog-frontend:latest

    - name: Archive Production Artifacts
      uses: actions/upload-artifact@v4
      with:
        name: dist-files
        path: |
          Angular/final-project/dist
          Server/dist

    # Add testing steps if needed
    - name: Run Frontend Tests
      working-directory: ./Angular/final-project
      run: |
        if [ -f "package.json" ] && grep -q "\"test\"" "package.json"; then
          npm test -- --no-watch --no-progress --browsers=ChromeHeadless
        else
          echo "No test script found in package.json"
        fi

    - name: Run Backend Tests
      working-directory: ./Server
      run: |
        if [ -f "package.json" ] && grep -q "\"test\"" "package.json"; then
          npm test
        else
          echo "No test script found in package.json"
        fi
